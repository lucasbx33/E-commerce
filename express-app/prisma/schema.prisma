// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model users {
  id         Int      @id @default(autoincrement())
  firstName  String?
  lastName   String?
  email      String   @unique
  password   String
  phone      String?
  createdAt  DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt
  orders     Order[]
  roles      String   @default("[]")
}

model article {
  id          Int       @id @default(autoincrement())
  name        String?   @unique
  description String?
  price       Decimal?
  stock       Int?
  Image       Image[]
  tags        ArticleTags[]
  createdAt   DateTime? @default(now())
  updated_at  DateTime? @default(now()) @updatedAt
  orderLines  OrderLine[]
}

model tags {
  id       Int       @id @default(autoincrement())
  name     String?       @unique
  articles ArticleTags[]
}

model ArticleTags {
  id         Int      @id @default(autoincrement())
  articleId  Int
  tagId      Int
  article    article  @relation(fields: [articleId], references: [id])
  tag        tags     @relation(fields: [tagId], references: [id])

  @@unique([articleId, tagId])
}

model Image {
  id         String   @id @unique @default(cuid())
  id_article article? @relation(fields: [articleId], references: [id])
  main_image Boolean?
  link       String?
  articleId  Int
  createdAt  DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt
}

model Order {
  id          String      @id @default(cuid())
  user        users       @relation(fields: [userId], references: [id])
  userId      Int        
  orderLines  OrderLine[]
  orderNumber Int
  totalPrice  Decimal?   
  status      String     
  createdAt   DateTime?   @default(now())
  updated_at  DateTime?   @default(now()) @updatedAt
}

model OrderLine {
  id          Int       @id @default(autoincrement())
  order       Order     @relation(fields: [orderId], references: [id])
  orderId     String
  article     article   @relation(fields: [articleId], references: [id])
  articleId   Int
  quantity    Int    
  unitPrice   Decimal
  lineTotal   Decimal
  createdAt   DateTime? @default(now())
  updated_at  DateTime? @default(now()) @updatedAt
}
